{"version":3,"sources":["Assets/IconsWeather/clear_d.svg","Assets/IconsWeather/clear_n.svg","Assets/IconsWeather/lcloudy_d.svg","Assets/IconsWeather/lcloudy_n.svg","Assets/IconsWeather/mcloudy_d.svg","Assets/IconsWeather/mcloudy_n.svg","Assets/IconsWeather/hicloudy.svg","Assets/IconsWeather/rain_light.svg","Assets/IconsWeather/rain_med.svg","Assets/IconsWeather/rain_hi.svg","Assets/IconsWeather/snow_light.svg","Assets/IconsWeather/snow_med.svg","Assets/IconsWeather/snow_hi.svg","Assets/IconsWeather/ts.svg","Assets/IconsWeather/ts-dry.svg","Assets/IconsWeather/fog.svg","Assets/IconsWeather/sleet.svg","serviceWorker.js","Store/Actions/Actions.js","Store/Actions/Types.js","Assets/IconsUI/icons.jsx","Components/AppHeader.jsx","Assets/IconsWeather/WeatherIcon.jsx","Assets/WeatherBgGradient/WeatherBgGradient.jsx","Assets/WeatherBg/WeatherBackground.jsx","Components/Utils/Utils.jsx","Components/NowPageVisual.jsx","Components/NowPage/index.jsx","Components/ForecastPage/index.jsx","Components/SettingsPage/index.jsx","Components/Navigation/index.jsx","Components/Modal.jsx","Store/Reducers/Reducers.js","Store/store.js","App.jsx","index.jsx"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","requestNowForecast","dispatch","getState","a","requestNowForecastStarted","store","cityList","length","failNowForecast","generateModal","modalType","modalTitle","modalBody","currentCityId","find","i","default","cityId","fetch","unitType","apiKey","request","ok","json","successNowForecast","statusText","message","requestDailyForecast","requestDailyForecastStarted","failDailyForecast","successDailyForecast","value","type","response","addCityRequestStarted","addCityRequestSuccess","UiIcon","props","icon","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","clipPath","id","AppHeader","className","classNames","separated","title","subtitle","refreshBtnCallback","onClick","WeatherIcon","src","ClearD","alt","ClearN","LcloudyD","LcloudyN","McloudyD","McloudyN","Hicloudy","RainLight","RainMed","RainHi","SnowLight","SnowMed","SnowHi","Ts","TsDry","Fog","Sleet","WeatherBgGradient","bg","WeatherBackground","getDateFromUnix","date","Date","isDay","currentTime","sunsetTime","sunriseTime","getWeatherIcon","getConditionName","NowPageVisual","getWeatherBgGradient","condition","Math","floor","temp","feelsTemp","pressure","humidity","wind","connect","weatherNow","useEffect","WeatherData","fetchStatus","name","weather","main","feels_like","speed","dt","sys","sunset","sunrise","ForecastWrap","data","map","index","key","toLocaleDateString","weekday","day","month","item","ForecastItem","hour","toLocaleTimeString","minute","conditionText","weatherForecast","forecast","sortedForecast","Object","values","list","reduce","acc","n","toDateString","push","city","CityListItem","onSetDefault","isDefault","cityName","cityCountry","onDelete","cityListError","addCityRequest","status","removeCity","setUnitType","setDefaultCity","setApiKey","useState","cityInputVal","changeCityInputVal","apiKeyInputVal","changeApiKeyInputVal","onChange","e","target","placeholder","localStorage","clear","document","reload","version","NavigationButton","active","onclick","currentRoute","switchRoute","modal","dismissModal","switchRoutes","action","fetchNowForecastReducer","undefined","fetchDailyForecastReducer","cityListReducer","filter","concat","country","newState","unitReducer","apiKeyReducer","modalReducer","initialState","JSON","parse","getItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","setItem","stringify","Modal","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.981c0074.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear_d.867e7db0.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear_n.3161cd8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/lcloudy_d.d1cf686d.svg\";","module.exports = __webpack_public_path__ + \"static/media/lcloudy_n.31c05a73.svg\";","module.exports = __webpack_public_path__ + \"static/media/mcloudy_d.47233da4.svg\";","module.exports = __webpack_public_path__ + \"static/media/mcloudy_n.0d28efd4.svg\";","module.exports = __webpack_public_path__ + \"static/media/hicloudy.5cb61615.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain_light.f07dad53.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain_med.9ab61367.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain_hi.ccec23c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow_light.b5ae8c6a.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow_med.8023eac6.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow_hi.f6bde2fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/ts.e1846a98.svg\";","module.exports = __webpack_public_path__ + \"static/media/ts-dry.79ce5d37.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.36094201.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.bc7b0e5f.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from './Types';\r\n\r\nexport const switchRoute = (value) => ({\r\n    type: types.SWITCH_ROUTES,\r\n    value: value\r\n});\r\n\r\nexport const requestNowForecast = () => (\r\n    async (dispatch, getState) => {\r\n        dispatch(requestNowForecastStarted());\r\n        const store = getState();\r\n\r\n        if(!store.cityList.length) {\r\n            dispatch(failNowForecast('Города отсутствуют!'));\r\n            dispatch(generateModal({\r\n                modalType: 'warning',\r\n                modalTitle: 'Города отсутствуют!',\r\n                modalBody: 'Список городов пуст. Перейдите в Настройки и добавьте хотя бы один город для просмотра погоды.'\r\n            }));\r\n            return;\r\n        }\r\n\r\n        const currentCityId = store.cityList.find(i => i.default).cityId;\r\n\r\n        try {\r\n            const request = await fetch(`https://api.openweathermap.org/data/2.5/weather?id=${currentCityId}&units=${store.unitType === 'C' ? 'metric': store.unitType === 'F' ? 'imperial' : 'metric'}&lang=ru&appid=${store.apiKey}`);\r\n            if(request.ok) {\r\n                const json = await request.json();\r\n                dispatch(successNowForecast(json));\r\n            } else {\r\n                dispatch(failNowForecast(request.statusText));\r\n                dispatch(generateModal({\r\n                    modalType: 'error',\r\n                    modalTitle: 'Не удалось получить погоду',\r\n                    modalBody: 'При загрузке погоды возникла ошибка: ' + request.statusText\r\n                }));\r\n            }\r\n        } catch(e) {\r\n            dispatch(failNowForecast(e.message));\r\n            dispatch(generateModal({\r\n                modalType: 'error',\r\n                modalTitle: 'Не удалось получить погоду',\r\n                modalBody: 'При загрузке погоды возникла ошибка: ' + e.message\r\n            }));\r\n        }\r\n    }\r\n);\r\n\r\nexport const requestDailyForecast = () => (\r\n    async (dispatch, getState) => {\r\n        dispatch(requestDailyForecastStarted());\r\n        const store = getState();\r\n\r\n        if(!store.cityList.length) {\r\n            dispatch(failDailyForecast('Города отсутствуют!'));\r\n            dispatch(generateModal({\r\n                modalType: 'warning',\r\n                modalTitle: 'Города отсутствуют!',\r\n                modalBody: 'Список городов пуст. Перейдите в Настройки и добавьте хотя бы один город для просмотра погоды.'\r\n            }));\r\n            return;\r\n        }\r\n\r\n        const currentCityId = store.cityList.find(i => i.default).cityId;\r\n\r\n        try {\r\n            const request = await fetch(`https://api.openweathermap.org/data/2.5/forecast?id=${currentCityId}&units=${store.unitType === 'C' ? 'metric': store.unitType === 'F' ? 'imperial' : 'metric'}&lang=ru&appid=${store.apiKey}`);\r\n            if(request.ok) {\r\n                const json = await request.json();\r\n                dispatch(successDailyForecast(json));\r\n            } else {\r\n                dispatch(failDailyForecast(request.statusText));\r\n                dispatch(generateModal({\r\n                    modalType: 'error',\r\n                    modalTitle: 'Не удалось получить погоду',\r\n                    modalBody: 'При загрузке погоды возникла ошибка: ' + request.statusText\r\n                }));\r\n            }\r\n        } catch(e) {\r\n            dispatch(failDailyForecast(e.message));\r\n            dispatch(generateModal({\r\n                modalType: 'error',\r\n                modalTitle: 'Не удалось получить погоду',\r\n                modalBody: 'При загрузке погоды возникла ошибка: ' + e.message\r\n            }));\r\n        }\r\n    }\r\n);\r\n\r\n\r\nexport const successNowForecast = (value) => ({\r\n    type: types.FETCH_NOW_FORECAST_SUCCESS,\r\n    response: value\r\n});\r\n\r\nexport const successDailyForecast = (value) => ({\r\n    type: types.FETCH_DAILY_FORECAST_SUCCESS,\r\n    response: value\r\n});\r\n\r\nexport const failNowForecast = (value) => ({\r\n    type: types.FETCH_NOW_FORECAST_FAILED,\r\n    error: value\r\n});\r\n\r\nexport const failDailyForecast = (value) => ({\r\n    type: types.FETCH_DAILY_FORECAST_FAILED,\r\n    error: value\r\n});\r\n\r\nexport const requestNowForecastStarted = () => ({\r\n    type: types.FETCH_NOW_FORECAST_STARTED\r\n});\r\n\r\nexport const requestDailyForecastStarted = () => ({\r\n    type: types.FETCH_DAILY_FORECAST_STARTED\r\n});\r\n\r\n\r\nexport const addCityRequest = (cityName) => (\r\n    async (dispatch, getState) => {\r\n        const store = getState();\r\n        dispatch(addCityRequestStarted());\r\n\r\n        try {\r\n            const request = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&lang=ru&appid=${store.apiKey}`);\r\n            if(request.ok) {\r\n                const json = await request.json();\r\n                dispatch(addCityRequestSuccess(json));\r\n            } else {\r\n                dispatch(generateModal({\r\n                    modalType: 'error',\r\n                    modalTitle: 'Не удалось добавить город',\r\n                    modalBody: request.status === 404 ? 'Этот город не найден. Измените запрос.' : 'Не удалось добавить город - ошибка ' + request.status\r\n                }));\r\n            }\r\n        } catch(e) {\r\n            dispatch(generateModal({\r\n                modalType: 'error',\r\n                modalTitle: 'Не удалось добавить город',\r\n                modalBody: 'Не удалось добавить город - ошибка ' + e.message\r\n            }));\r\n        }\r\n    }\r\n);\r\n\r\nexport const addCityRequestStarted = () => ({\r\n    type: types.ADD_CITY_CHECK_START\r\n});\r\n\r\nexport const addCityRequestSuccess = (value) => ({\r\n    type: types.ADD_CITY_CHECK_SUCCESS,\r\n    response: value\r\n});\r\n\r\nexport const removeCity = (value) => ({\r\n    type: types.REMOVE_CITY,\r\n    value: value\r\n});\r\n\r\nexport const setDefaultCity = (value) => ({\r\n    type: types.SET_DEFAULT_CITY,\r\n    value: value\r\n})\r\n\r\nexport const setUnitType = (value) => ({\r\n    type: types.SET_UNIT,\r\n    value: value\r\n})\r\n\r\nexport const setApiKey = (value) => ({\r\n    type: types.SET_API_KEY,\r\n    value: value\r\n})\r\n\r\nexport const saveStorePartsToLocal = () => (\r\n    (dispatch, getState) => {\r\n        const store = getState();\r\n        localStorage.setItem('cityList', JSON.stringify(store.cityList));\r\n        localStorage.setItem('unitType', store.unitType);\r\n        localStorage.setItem('apiKey', store.apiKey);\r\n    }\r\n);\r\n\r\nexport const generateModal = (value) => ({\r\n    type: types.GENERATE_MODAL,\r\n    value: value\r\n})\r\n\r\nexport const dismissModal = () => ({\r\n    type: types.DISMISS_MODAL,\r\n})","export const SWITCH_ROUTES = 'SWITCH_ROUTES';\r\nexport const CHANGE_CITY = 'CHANGE_CITY';\r\n\r\nexport const FETCH_NOW_FORECAST_STARTED = 'FETCH_NOW_FORECAST_STARTED';\r\nexport const FETCH_DAILY_FORECAST_STARTED = 'FETCH_DAILY_FORECAST_STARTED';\r\n\r\nexport const FETCH_NOW_FORECAST_SUCCESS = 'FETCH_NOW_FORECAST_SUCCESS';\r\nexport const FETCH_DAILY_FORECAST_SUCCESS = 'FETCH_DAILY_FORECAST_SUCCESS';\r\n\r\nexport const FETCH_NOW_FORECAST_FAILED = 'FETCH_NOW_FORECAST_FAILED';\r\nexport const FETCH_DAILY_FORECAST_FAILED = 'FETCH_DAILY_FORECAST_FAILED';\r\n\r\nexport const ADD_CITY_CHECK_START = 'ADD_CITY_CHECK_START';\r\nexport const ADD_CITY_CHECK_SUCCESS = 'ADD_CITY_CHECK_SUCCESS';\r\nexport const REMOVE_CITY = 'REMOVE_CITY';\r\nexport const SET_DEFAULT_CITY = 'SET_DEFAULT_CITY';\r\n\r\nexport const SET_API_KEY = 'SET_API_KEY';\r\nexport const SET_UNIT = 'SET_UNIT';\r\n\r\nexport const GENERATE_MODAL = 'GENERATE_MODAL';\r\nexport const DISMISS_MODAL = 'DISMISS_MODAL';","import React from 'react';\r\n\r\nexport function UiIcon(props) {\r\n    switch(props.icon) {\r\n        case 'home':\r\n            return (\r\n                <svg width=\"90\" height=\"90\" viewBox=\"0 0 90 90\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M84.0239 49.4998H76.4999V76.4998C76.4999 78.5023 75.6269 80.9998 71.9999 80.9998H53.9999V53.9998H35.9999V80.9998H17.9999C14.3729 80.9998 13.4999 78.5023 13.4999 76.4998V49.4998H5.97593C3.28493 49.4998 3.86093 48.0418 5.70593 46.1338L41.8139 9.98982C42.6914 9.08082 43.8434 8.63082 44.9999 8.58582C46.1564 8.63082 47.3084 9.07632 48.1859 9.98982L84.2894 46.1293C86.1389 48.0418 86.7149 49.4998 84.0239 49.4998Z\"/>\r\n                </svg>\r\n            );\r\n        case 'forecast':\r\n            return (\r\n                <svg width=\"90\" height=\"90\" viewBox=\"0 0 90 90\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27.5 12.1875C27.5 11.6073 27.2695 11.0509 26.8593 10.6407C26.4491 10.2305 25.8927 10 25.3125 10C24.7323 10 24.1759 10.2305 23.7657 10.6407C23.3555 11.0509 23.125 11.6073 23.125 12.1875V14.375H18.75C16.4294 14.375 14.2038 15.2969 12.5628 16.9378C10.9219 18.5788 10 20.8044 10 23.125L10 27.5H80V23.125C80 20.8044 79.0781 18.5788 77.4372 16.9378C75.7962 15.2969 73.5706 14.375 71.25 14.375H66.875V12.1875C66.875 11.6073 66.6445 11.0509 66.2343 10.6407C65.8241 10.2305 65.2677 10 64.6875 10C64.1073 10 63.5509 10.2305 63.1407 10.6407C62.7305 11.0509 62.5 11.6073 62.5 12.1875V14.375H27.5V12.1875ZM10 31.875H80V71.25C80 73.5706 79.0781 75.7962 77.4372 77.4372C75.7962 79.0781 73.5706 80 71.25 80H18.75C16.4294 80 14.2038 79.0781 12.5628 77.4372C10.9219 75.7962 10 73.5706 10 71.25V31.875ZM50.845 65.9562C45.9888 65.9562 43.6 62.6006 43.3944 59.8006H46.3825C46.5706 61.4194 48.0756 63.3881 50.9806 63.3881C54.6731 63.3881 56.6725 59.6781 56.69 53.9206H56.5719C55.9025 55.7319 53.785 57.3769 50.5213 57.3769C46.7938 57.3769 43.1888 54.7081 43.1888 49.6331C43.1888 44.6587 46.9994 41.7188 51.0506 41.7188C56.1781 41.7188 59.595 44.93 59.595 53.3913C59.595 61.2881 56.3488 65.9519 50.845 65.9519V65.9562ZM51.1338 54.8263C53.8681 54.8263 56.3138 52.7088 56.3138 49.6637C56.3138 46.0238 54.0081 44.2825 51.2387 44.2825C48.675 44.2825 46.1287 45.9756 46.1287 49.5762C46.1287 53.1506 48.5044 54.8263 51.1338 54.8263ZM38.1969 42.1825V65.51H35.2437V45.3413H35.1912C33.9225 46.0238 31.3281 47.6162 29.6875 48.7406V45.7C31.5287 44.41 33.4471 43.2339 35.4319 42.1781H38.1969V42.1825Z\"/>\r\n                </svg>\r\n            );\r\n        case 'settings':\r\n            return (\r\n                <svg width=\"90\" height=\"90\" viewBox=\"0 0 90 90\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M40.924 13.1827C41.9915 8.93909 48.0157 8.93909 49.0788 13.1827L49.3895 14.434C49.5712 15.1611 49.9442 15.8264 50.4698 16.3607C50.9954 16.895 51.6544 17.279 52.3784 17.4727C53.1025 17.6665 53.8652 17.6629 54.5874 17.4624C55.3096 17.262 55.965 16.8719 56.4855 16.3327L57.3824 15.4096C60.423 12.264 65.6422 15.2827 64.4391 19.4826L64.0848 20.7251C63.8797 21.4451 63.8708 22.2069 64.0591 22.9315C64.2474 23.6561 64.6259 24.3172 65.1555 24.8464C65.6851 25.3756 66.3466 25.7536 67.0714 25.9412C67.7961 26.1289 68.5579 26.1194 69.2778 25.9137L70.5202 25.5637C74.7245 24.3606 77.7388 29.5799 74.5933 32.6204L73.6702 33.5173C73.131 34.0379 72.7409 34.6933 72.5404 35.4155C72.3399 36.1377 72.3364 36.9004 72.5301 37.6244C72.7238 38.3485 73.1078 39.0075 73.6421 39.533C74.1765 40.0586 74.8417 40.4317 75.5689 40.6134L76.8201 40.924C81.0638 41.9915 81.0638 48.0157 76.8201 49.0788L75.5689 49.3895C74.8417 49.5712 74.1765 49.9442 73.6421 50.4698C73.1078 50.9954 72.7238 51.6544 72.5301 52.3784C72.3364 53.1025 72.3399 53.8652 72.5404 54.5874C72.7409 55.3096 73.131 55.965 73.6702 56.4855L74.5933 57.3824C77.7388 60.423 74.7201 65.6422 70.5202 64.4391L69.2821 64.0848C68.5618 63.8787 67.7995 63.8691 67.0742 64.0569C66.3489 64.2447 65.6871 64.6231 65.1573 65.1529C64.6275 65.6827 64.2491 66.3445 64.0613 67.0698C63.8735 67.7951 63.8831 68.5574 64.0891 69.2778L64.4391 70.5202C65.6422 74.7245 60.423 77.7388 57.3824 74.5933L56.4855 73.6702C55.965 73.131 55.3096 72.7409 54.5874 72.5404C53.8652 72.3399 53.1025 72.3364 52.3784 72.5301C51.6544 72.7238 50.9954 73.1078 50.4698 73.6421C49.9442 74.1765 49.5712 74.8417 49.3895 75.5689L49.0788 76.8201C48.0114 81.0638 41.9871 81.0638 40.924 76.8201L40.6134 75.5689C40.4317 74.8417 40.0586 74.1765 39.533 73.6421C39.0075 73.1078 38.3485 72.7238 37.6244 72.5301C36.9004 72.3364 36.1377 72.3399 35.4155 72.5404C34.6933 72.7409 34.0379 73.131 33.5173 73.6702L32.6204 74.5933C29.5799 77.7388 24.3606 74.7201 25.5637 70.5202L25.9181 69.2821C26.1241 68.5618 26.1337 67.7995 25.9459 67.0742C25.7581 66.3489 25.3797 65.6871 24.8499 65.1573C24.3201 64.6275 23.6583 64.2491 22.933 64.0613C22.2077 63.8735 21.4454 63.8831 20.7251 64.0891L19.4826 64.4391C15.2783 65.6422 12.264 60.423 15.4096 57.3824L16.3327 56.4855C16.8719 55.965 17.262 55.3096 17.4624 54.5874C17.6629 53.8652 17.6665 53.1025 17.4727 52.3784C17.279 51.6544 16.895 50.9954 16.3607 50.4698C15.8264 49.9442 15.1611 49.5712 14.434 49.3895L13.1827 49.0788C8.93909 48.0114 8.93909 41.9871 13.1827 40.924L14.434 40.6134C15.1611 40.4317 15.8264 40.0586 16.3607 39.533C16.895 39.0075 17.279 38.3485 17.4727 37.6244C17.6665 36.9004 17.6629 36.1377 17.4624 35.4155C17.262 34.6933 16.8719 34.0379 16.3327 33.5173L15.4096 32.6204C12.264 29.5799 15.2827 24.3606 19.4826 25.5637L20.7251 25.9181C21.4451 26.1231 22.2069 26.132 22.9315 25.9437C23.6561 25.7555 24.3172 25.3769 24.8464 24.8473C25.3756 24.3177 25.7536 23.6563 25.9412 22.9315C26.1289 22.2067 26.1194 21.4449 25.9137 20.7251L25.5637 19.4826C24.3606 15.2783 29.5799 12.264 32.6204 15.4096L33.5173 16.3327C34.0379 16.8719 34.6933 17.262 35.4155 17.4624C36.1377 17.6629 36.9004 17.6665 37.6244 17.4727C38.3485 17.279 39.0075 16.895 39.533 16.3607C40.0586 15.8264 40.4317 15.1611 40.6134 14.434L40.924 13.1827ZM53.4636 65.2882C50.7751 66.3686 47.8986 66.9038 45.0014 66.8628V66.8672C40.9126 66.8672 36.9418 65.7219 33.518 63.6091L47.3347 48.0412H66.9638C66.7038 49.8921 66.2069 51.7063 65.4823 53.4383C64.364 56.1113 62.7257 58.5353 60.6624 60.5696C58.5991 62.6039 56.1521 64.2078 53.4636 65.2882ZM67.1262 43.5172H47.3347L32.736 26.8996C36.3302 24.4643 40.5973 23.1356 45.0014 23.1356C47.8986 23.0947 50.7751 23.6299 53.4636 24.7103C56.1521 25.7906 58.5991 27.3945 60.6624 29.4288C62.7257 31.4631 64.364 33.8872 65.4823 36.5602C66.4095 38.7764 66.9638 41.1271 67.1262 43.5172ZM29.2608 29.8243C25.3349 33.8957 23.1356 39.3352 23.1356 45.0014C23.1356 50.8006 25.4394 56.3622 29.54 60.4629C29.6674 60.5902 29.7962 60.7159 29.9263 60.8398L43.3651 45.7792H43.3606L29.2608 29.8243Z\"/>\r\n                </svg>                \r\n            );\r\n        case 'pressure':\r\n            return (\r\n                <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M48.75 29.9999C48.7497 26.9831 48.0161 24.0116 46.6125 21.3412L43.8094 24.1462C44.5973 25.9971 45.0023 27.9883 45 29.9999H48.75Z\"/>\r\n                <path d=\"M43.9013 18.75L41.25 16.0988L32.4094 24.9375C31.6587 24.5715 30.8352 24.3792 30 24.375C28.8875 24.375 27.7999 24.7049 26.8749 25.323C25.9499 25.9411 25.2289 26.8196 24.8032 27.8474C24.3774 28.8752 24.266 30.0062 24.4831 31.0974C24.7001 32.1885 25.2359 33.1908 26.0225 33.9775C26.8092 34.7641 27.8115 35.2999 28.9026 35.5169C29.9938 35.734 31.1248 35.6226 32.1526 35.1968C33.1804 34.7711 34.0589 34.0501 34.677 33.1251C35.2951 32.2001 35.625 31.1125 35.625 30C35.6208 29.1648 35.4285 28.3413 35.0625 27.5906L43.9013 18.75ZM30 31.875C29.6292 31.875 29.2667 31.765 28.9583 31.559C28.65 31.353 28.4096 31.0601 28.2677 30.7175C28.1258 30.3749 28.0887 29.9979 28.161 29.6342C28.2334 29.2705 28.412 28.9364 28.6742 28.6742C28.9364 28.412 29.2705 28.2334 29.6342 28.161C29.9979 28.0887 30.3749 28.1258 30.7175 28.2677C31.0601 28.4096 31.353 28.65 31.559 28.9583C31.765 29.2666 31.875 29.6292 31.875 30C31.8745 30.4971 31.6768 30.9738 31.3253 31.3253C30.9738 31.6768 30.4971 31.8745 30 31.875Z\"/>\r\n                <path d=\"M30 15C32.0116 14.9979 34.0028 15.4029 35.8538 16.1906L38.6588 13.3856C35.803 11.8904 32.6096 11.1578 29.3877 11.2587C26.1658 11.3596 23.0245 12.2906 20.2679 13.9615C17.5113 15.6325 15.2328 17.9868 13.653 20.7966C12.0731 23.6064 11.2454 26.7765 11.25 30H15C15.005 26.0233 16.5869 22.2109 19.3989 19.3989C22.2109 16.5869 26.0233 15.005 30 15Z\"/>\r\n                <path d=\"M30 56.25C24.8083 56.25 19.7331 54.7105 15.4163 51.8261C11.0995 48.9417 7.73497 44.842 5.74817 40.0455C3.76137 35.2489 3.24154 29.9709 4.2544 24.8789C5.26726 19.7869 7.76733 15.1096 11.4385 11.4385C15.1096 7.76733 19.7869 5.26726 24.8789 4.2544C29.9709 3.24154 35.2489 3.76137 40.0455 5.74817C44.842 7.73497 48.9417 11.0995 51.8261 15.4163C54.7105 19.7331 56.25 24.8083 56.25 30C56.2421 36.9595 53.4739 43.6317 48.5528 48.5528C43.6317 53.4739 36.9595 56.2421 30 56.25ZM30 7.50001C25.5499 7.50001 21.1998 8.81961 17.4997 11.2919C13.7996 13.7643 10.9157 17.2783 9.21272 21.3896C7.50975 25.501 7.06418 30.025 7.93234 34.3895C8.80051 38.7541 10.9434 42.7632 14.0901 45.9099C17.2368 49.0566 21.2459 51.1995 25.6105 52.0677C29.9751 52.9358 34.4991 52.4903 38.6104 50.7873C42.7217 49.0843 46.2357 46.2004 48.7081 42.5003C51.1804 38.8002 52.5 34.4501 52.5 30C52.4931 24.0348 50.1203 18.3158 45.9022 14.0978C41.6842 9.87972 35.9653 7.50696 30 7.50001Z\"/>\r\n                </svg>\r\n            );\r\n        case 'humidity':\r\n            return (\r\n                <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M13.59 18.91L29.5 3L45.41 18.91C48.5567 22.0567 50.6996 26.0658 51.5677 30.4304C52.4358 34.7949 51.9903 39.3189 50.2873 43.4302C48.5843 47.5416 45.7004 51.0556 42.0003 53.5279C38.3002 56.0002 33.9501 57.3198 29.5 57.3198C25.0499 57.3198 20.6998 56.0002 16.9997 53.5279C13.2996 51.0556 10.4157 47.5416 8.71275 43.4302C7.00977 39.3189 6.56418 34.7949 7.43232 30.4304C8.30047 26.0658 10.4434 22.0567 13.59 18.91ZM29.5 10.0725L17.125 22.445C15.4976 24.0683 14.207 25.9973 13.3275 28.121C12.448 30.2448 11.9968 32.5214 12 34.82H47C47.0032 32.5214 46.552 30.2448 45.6725 28.121C44.793 25.9973 43.5024 24.0683 41.875 22.445L29.5 10.07V10.0725Z\"/>\r\n                </svg>                \r\n            );\r\n        case 'wind':\r\n            return (\r\n                <svg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M32.5 13.75C32.5 8.925 28.575 5 23.75 5C18.665 5 15.625 8.8125 15.625 12.5H20.625C20.625 11.4625 21.595 10 23.75 10C25.8175 10 27.5 11.6825 27.5 13.75C27.5 15.8175 25.8175 17.5 23.75 17.5H5V22.5H23.75C28.575 22.5 32.5 18.575 32.5 13.75ZM38.75 37.5H20V42.5H38.75C40.8175 42.5 42.5 44.1825 42.5 46.25C42.5 48.3175 40.8175 50 38.75 50C36.595 50 35.625 48.5375 35.625 47.5H30.625C30.625 51.1875 33.665 55 38.75 55C43.575 55 47.5 51.075 47.5 46.25C47.5 41.425 43.575 37.5 38.75 37.5Z\"/>\r\n                <path d=\"M45 12.5C39.485 12.5 35 16.985 35 22.5H40C40 19.7425 42.2425 17.5 45 17.5C47.7575 17.5 50 19.7425 50 22.5C50 25.2575 47.7575 27.5 45 27.5H5V32.5H45C50.515 32.5 55 28.015 55 22.5C55 16.985 50.515 12.5 45 12.5ZM5 37.5H15V42.5H5V37.5Z\"/>\r\n                </svg> \r\n            );\r\n        case 'update':\r\n            return (\r\n                <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <g clipPath=\"url(#clip0)\">\r\n                <path d=\"M17.5476 11.2624C19.8355 10.0218 22.3974 9.373 25 9.37499C29.1428 9.37582 33.1159 11.0219 36.0454 13.9514C38.4042 16.3102 39.9309 19.3455 40.4367 22.6013L37.0437 19.2063C36.7503 18.9129 36.3524 18.748 35.9375 18.748C35.5225 18.748 35.1246 18.9129 34.8312 19.2063C34.5378 19.4997 34.373 19.8976 34.373 20.3125C34.373 20.7274 34.5378 21.1254 34.8312 21.4188L41.0812 27.6688C41.2264 27.8143 41.3988 27.9297 41.5886 28.0085C41.7784 28.0873 41.9819 28.1278 42.1875 28.1278C42.393 28.1278 42.5965 28.0873 42.7863 28.0085C42.9761 27.9297 43.1486 27.8143 43.2937 27.6688L49.5437 21.4188C49.6892 21.2736 49.8047 21.1012 49.8834 20.9114C49.9622 20.7215 50.0028 20.518 50.0028 20.3125C50.0028 20.107 49.9622 19.9035 49.8834 19.7137C49.8047 19.5238 49.6892 19.3514 49.5437 19.2063C49.3986 19.0608 49.2261 18.9453 49.0363 18.8665C48.8465 18.7878 48.643 18.7472 48.4375 18.7472C48.2319 18.7472 48.0284 18.7878 47.8386 18.8665C47.6488 18.9453 47.4764 19.0608 47.3312 19.2063L43.633 22.9068C43.2632 19.6123 42.0245 16.4611 40.0268 13.7842C37.6092 10.5447 34.2095 8.1732 30.3343 7.02321C26.4592 5.87321 22.3162 6.00631 18.5229 7.40266C14.7295 8.79902 11.489 11.3839 9.28434 14.7719C9.07573 15.1185 9.00971 15.5326 9.10018 15.9269C9.19065 16.3213 9.43056 16.6652 9.76943 16.8862C10.1083 17.1073 10.5197 17.1883 10.9171 17.1121C11.3144 17.036 11.6668 16.8087 11.9 16.4781C13.3183 14.2959 15.2597 12.5029 17.5476 11.2624Z\"/>\r\n                <path d=\"M6.36698 27.0932L2.66871 30.7938C2.37531 31.0872 1.97738 31.252 1.56246 31.252C1.14754 31.252 0.749605 31.0872 0.45621 30.7938C0.162814 30.5004 -0.00201416 30.1024 -0.00201416 29.6875C-0.00201416 29.2726 0.162814 28.8747 0.45621 28.5813L6.70621 22.3313C6.85135 22.1858 7.02378 22.0703 7.2136 21.9915C7.40343 21.9128 7.60694 21.8722 7.81246 21.8722C8.01798 21.8722 8.22149 21.9128 8.41131 21.9915C8.60114 22.0703 8.77357 22.1858 8.91871 22.3313L15.1687 28.5813C15.4621 28.8747 15.6269 29.2726 15.6269 29.6875C15.6269 30.1024 15.4621 30.5004 15.1687 30.7938C14.8753 31.0872 14.4774 31.252 14.0625 31.252C13.6475 31.252 13.2496 31.0872 12.9562 30.7938L9.55862 27.3941C9.94693 29.9041 10.9435 32.2944 12.4768 34.3494C14.4918 37.0499 17.3257 39.0268 20.5559 39.9851C23.7862 40.9434 27.2397 40.8319 30.4013 39.6671C33.563 38.5023 36.2635 36.3468 38.1 33.5219C38.2082 33.342 38.3516 33.1857 38.5216 33.0625C38.6916 32.9393 38.8847 32.8516 39.0893 32.8046C39.294 32.7577 39.506 32.7524 39.7127 32.7892C39.9194 32.8261 40.1166 32.9042 40.2924 33.0189C40.4683 33.1336 40.6192 33.2826 40.7362 33.4569C40.8532 33.6312 40.9338 33.8274 40.9733 34.0336C41.0128 34.2398 41.0104 34.4519 40.9661 34.6571C40.9218 34.8623 40.8366 35.0565 40.7156 35.2281C38.5109 38.6161 35.2704 41.201 31.4771 42.5973C27.6838 43.9937 23.5407 44.1268 19.6656 42.9768C15.7905 41.8268 12.3907 39.4553 9.97315 36.2157C7.97545 33.5389 6.73678 30.3877 6.36698 27.0932Z\"/>\r\n                </g>\r\n                <defs>\r\n                <clipPath id=\"clip0\">\r\n                <rect width=\"50\" height=\"50\" fill=\"white\"/>\r\n                </clipPath>\r\n                </defs>\r\n                </svg>\r\n            );\r\n        case 'remove':\r\n            return (\r\n                <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M12.6165 13.4637C12.6953 13.2738 12.8107 13.1014 12.9562 12.9563C13.1014 12.8108 13.2738 12.6953 13.4636 12.6165C13.6535 12.5378 13.857 12.4972 14.0625 12.4972C14.268 12.4972 14.4715 12.5378 14.6613 12.6165C14.8512 12.6953 15.0236 12.8108 15.1687 12.9563L24.9997 22.7872L34.8307 12.9563C34.9758 12.8108 35.1483 12.6953 35.3381 12.6165C35.5279 12.5378 35.7314 12.4972 35.9369 12.4972C36.1425 12.4972 36.346 12.5378 36.5358 12.6165C36.7256 12.6953 36.898 12.8108 37.0432 12.9563C37.1887 13.1014 37.3041 13.2738 37.3829 13.4637C37.4617 13.6535 37.5022 13.857 37.5022 14.0625C37.5022 14.268 37.4617 14.4715 37.3829 14.6614C37.3041 14.8512 37.1887 15.0236 37.0432 15.1688L27.2122 24.9997L37.0437 34.8313C37.3371 35.1247 37.502 35.5226 37.502 35.9375C37.502 36.3524 37.3371 36.7504 37.0437 37.0438C36.7503 37.3372 36.3524 37.502 35.9375 37.502C35.5226 37.502 35.1246 37.3372 34.8312 37.0438L24.9997 27.2122L15.1682 37.0438C14.8748 37.3372 14.4769 37.502 14.0619 37.502C13.647 37.502 13.2491 37.3372 12.9557 37.0438C12.6623 36.7504 12.4975 36.3524 12.4975 35.9375C12.4975 35.5226 12.6623 35.1247 12.9557 34.8313L22.7872 24.9997L12.9562 15.1688C12.8107 15.0236 12.6953 14.8512 12.6165 14.6614C12.5377 14.4715 12.4972 14.268 12.4972 14.0625C12.4972 13.857 12.5377 13.6535 12.6165 13.4637Z\"/>\r\n                </svg>                \r\n            );\r\n        case 'check-blank':\r\n            return (\r\n                <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M25 46.875C30.8016 46.875 36.3656 44.5703 40.468 40.468C44.5703 36.3656 46.875 30.8016 46.875 25C46.875 19.1984 44.5703 13.6344 40.468 9.53204C36.3656 5.42968 30.8016 3.125 25 3.125C19.1984 3.125 13.6344 5.42968 9.53204 9.53204C5.42968 13.6344 3.125 19.1984 3.125 25C3.125 30.8016 5.42968 36.3656 9.53204 40.468C13.6344 44.5703 19.1984 46.875 25 46.875V46.875ZM25 50C31.6304 50 37.9893 47.3661 42.6777 42.6777C47.3661 37.9893 50 31.6304 50 25C50 18.3696 47.3661 12.0107 42.6777 7.32233C37.9893 2.63392 31.6304 0 25 0C18.3696 0 12.0107 2.63392 7.32233 7.32233C2.63392 12.0107 0 18.3696 0 25C0 31.6304 2.63392 37.9893 7.32233 42.6777C12.0107 47.3661 18.3696 50 25 50V50Z\"/>\r\n                </svg>                \r\n            );\r\n        case 'check-checked':\r\n            return (\r\n                <svg width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M35.9248 14.8521C35.309 14.8538 34.7186 15.0977 34.2813 15.5313H34.2844C34.2621 15.5529 34.2412 15.5758 34.2219 15.6L23.3688 29.4281L16.825 22.8875C16.6104 22.6573 16.3517 22.4726 16.0642 22.3445C15.7767 22.2164 15.4663 22.1475 15.1516 22.1419C14.8369 22.1364 14.5244 22.1943 14.2325 22.3121C13.9407 22.43 13.6756 22.6055 13.453 22.828C13.2305 23.0506 13.055 23.3157 12.9371 23.6075C12.8192 23.8994 12.7614 24.212 12.7669 24.5267C12.7725 24.8414 12.8413 25.1517 12.9694 25.4392C13.0975 25.7267 13.2822 25.9855 13.5125 26.2L21.7781 34.4688C22.0009 34.6916 22.2664 34.8672 22.5586 34.9851C22.8508 35.103 23.1639 35.1608 23.4789 35.1549C23.794 35.1491 24.1046 35.0798 24.3923 34.9512C24.68 34.8225 24.9387 34.6372 25.1531 34.4063L37.6281 18.8125C38.0529 18.3667 38.2852 17.7716 38.2747 17.1559C38.2642 16.5401 38.0118 15.9533 37.572 15.5222C37.1323 15.0911 36.5406 14.8504 35.9248 14.8521Z\"/>\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M42.6777 42.6777C37.9893 47.3661 31.6304 50 25 50C18.3696 50 12.0107 47.3661 7.32233 42.6777C2.63392 37.9893 0 31.6304 0 25C0 18.3696 2.63392 12.0107 7.32233 7.32233C12.0107 2.63392 18.3696 0 25 0C31.6304 0 37.9893 2.63392 42.6777 7.32233C47.3661 12.0107 50 18.3696 50 25C50 31.6304 47.3661 37.9893 42.6777 42.6777ZM40.468 40.468C36.3656 44.5703 30.8016 46.875 25 46.875C19.1984 46.875 13.6344 44.5703 9.53204 40.468C5.42968 36.3656 3.125 30.8016 3.125 25C3.125 19.1984 5.42968 13.6344 9.53204 9.53204C13.6344 5.42968 19.1984 3.125 25 3.125C30.8016 3.125 36.3656 5.42968 40.468 9.53204C44.5703 13.6344 46.875 19.1984 46.875 25C46.875 30.8016 44.5703 36.3656 40.468 40.468Z\"/>\r\n                </svg>                \r\n            );\r\n        default:\r\n            return null;\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { UiIcon } from '../Assets/IconsUI/icons';\r\nimport classNames from 'classnames';\r\n\r\nexport function AppHeader(props) {\r\n    return (\r\n        <div className={classNames('app-header', props.separated && 'app-header-separated')}>\r\n            <div className='app-title'>\r\n                <h1>{props.title}</h1>\r\n                <h2>{props.subtitle}</h2>\r\n            </div>\r\n            {\r\n                props.refreshBtnCallback &&\r\n                <button className='icon-button' onClick={props.refreshBtnCallback} title='Обновить'>\r\n                    <UiIcon icon='update' />\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport ClearD from './clear_d.svg'; \r\nimport ClearN from './clear_n.svg'; \r\n\r\nimport LcloudyD from './lcloudy_d.svg';\r\nimport LcloudyN from './lcloudy_n.svg';\r\n\r\nimport McloudyD from './mcloudy_d.svg';\r\nimport McloudyN from './mcloudy_n.svg';\r\n\r\nimport Hicloudy from './hicloudy.svg'; \r\n\r\nimport RainLight from './rain_light.svg';\r\nimport RainMed from './rain_med.svg';\r\nimport RainHi from './rain_hi.svg';\r\n\r\nimport SnowLight from './snow_light.svg';\r\nimport SnowMed from './snow_med.svg';\r\nimport SnowHi from './snow_hi.svg';\r\n\r\nimport Ts from './ts.svg';\r\nimport TsDry from './ts-dry.svg';\r\n\r\nimport Fog from './fog.svg';\r\n\r\nimport Sleet from './sleet.svg';\r\n\r\nexport function WeatherIcon(props) {\r\n    switch(props.icon) {\r\n        case 'clear_d':\r\n            return <img src={ClearD} className='weather-icon' alt=''/>;\r\n        case 'clear_n':\r\n            return <img src={ClearN} className='weather-icon' alt=''/>;\r\n        case 'lcloudy_d':\r\n            return <img src={LcloudyD} className='weather-icon' alt=''/>;\r\n        case 'lcloudy_n':\r\n            return <img src={LcloudyN} className='weather-icon' alt=''/>;\r\n        case 'mcloudy_d':\r\n            return <img src={McloudyD} className='weather-icon' alt=''/>;\r\n        case 'mcloudy_n':\r\n            return <img src={McloudyN} className='weather-icon' alt=''/>;\r\n\r\n        case 'hicloudy':\r\n            return <img src={Hicloudy} className='weather-icon' alt=''/>;\r\n\r\n        case 'rain_light':\r\n            return <img src={RainLight} className='weather-icon' alt=''/>;\r\n        case 'rain_med':\r\n            return <img src={RainMed} className='weather-icon' alt=''/>;\r\n        case 'rain_hi':\r\n            return <img src={RainHi} className='weather-icon' alt=''/>;\r\n        \r\n        case 'snow_light':\r\n            return <img src={SnowLight} className='weather-icon' alt=''/>;\r\n        case 'snow_med':\r\n            return <img src={SnowMed} className='weather-icon' alt=''/>;\r\n        case 'snow_hi':\r\n            return <img src={SnowHi} className='weather-icon' alt=''/>;\r\n\r\n        case 'ts':\r\n            return <img src={Ts} className='weather-icon' alt=''/>;\r\n        case 'ts_dry':\r\n            return <img src={TsDry} className='weather-icon' alt=''/>;\r\n\r\n        case 'fog':\r\n            return <img src={Fog} className='weather-icon' alt=''/>;\r\n\r\n        case 'sleet':\r\n            return <img src={Sleet} className='weather-icon' alt=''/>;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport function WeatherBgGradient(props) {\r\n    return <div className={classNames('weather-bg-gradient', 'bg-gradient-' + props.bg)}/>\r\n}","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nexport function WeatherBackground(props) {\r\n    return <div className={classNames('weather-bg', 'bg-' + props.bg)}/>\r\n}","import React from 'react';\r\n\r\nimport { WeatherIcon } from '../../Assets/IconsWeather/WeatherIcon';\r\nimport { WeatherBgGradient } from '../../Assets/WeatherBgGradient/WeatherBgGradient';\r\nimport { WeatherBackground } from '../../Assets/WeatherBg/WeatherBackground';\r\n\r\nexport function getDateFromUnix(date) {\r\n    return new Date(date * 1000);\r\n}\r\n\r\nexport function isDay(currentTime, sunsetTime, sunriseTime) {\r\n    if (currentTime < sunsetTime && currentTime > sunriseTime) {\r\n        return true;\r\n    } else if ((currentTime > sunsetTime && currentTime < sunriseTime) || (currentTime > sunsetTime && currentTime > sunriseTime) || (currentTime < sunsetTime && currentTime < sunriseTime)) {\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function getWeatherIcon(id, isDay) {\r\n    if(isDay) {\r\n        // Без осадков\r\n\r\n        if (id === 800) return <WeatherIcon icon='clear_d' />;\r\n        if (id === 801) return <WeatherIcon icon='lcloudy_d' />;\r\n        if (id === 802) return <WeatherIcon icon='lcloudy_d' />;\r\n        if (id === 803) return <WeatherIcon icon='mcloudy_d' />;\r\n        if (id === 804) return <WeatherIcon icon='hicloudy' />;\r\n        \r\n        // Гроза\r\n\r\n        if (id >= 200 && id <= 202) return <WeatherIcon icon='ts' />;\r\n        if (id >= 230 && id <= 232) return <WeatherIcon icon='ts' />;\r\n\r\n        if (id >= 210 && id <= 221) return <WeatherIcon icon='ts_dry' />;\r\n\r\n        // Морось\r\n\r\n        if (id >= 300 && id <= 321) return <WeatherIcon icon='rain_light' />;\r\n\r\n        // Дождь\r\n\r\n        if (id === 500 || id === 520) return <WeatherIcon icon='rain_light' />;\r\n        if (id === 501 || id === 521 || id === 511) return <WeatherIcon icon='rain_med' />;\r\n        if ((id >= 502 && id <= 504) || (id >= 522 && id <= 531)) return <WeatherIcon icon='rain_hi' />;\r\n\r\n        // Снег, мокрый снег\r\n\r\n        if (id === 600 || id === 620) return <WeatherIcon icon='snow_light' />\r\n        if (id === 601 || id === 621) return <WeatherIcon icon='snow_med' />\r\n        if (id === 602 || id === 622) return <WeatherIcon icon='snow_hi' />\r\n        if (id >= 611 && id <= 616) return <WeatherIcon icon='sleet' />\r\n \r\n        // Туман, дымка\r\n\r\n        if (id >= 701 && id <= 781) return <WeatherIcon icon='fog' />;\r\n    } else {\r\n        // Без осадков\r\n\r\n        if (id === 800) return <WeatherIcon icon='clear_n' />;\r\n        if (id === 801) return <WeatherIcon icon='lcloudy_n' />;\r\n        if (id === 802) return <WeatherIcon icon='lcloudy_n' />;\r\n        if (id === 803) return <WeatherIcon icon='mcloudy_n' />;\r\n        if (id === 804) return <WeatherIcon icon='hicloudy' />;\r\n        \r\n        // Гроза\r\n\r\n        if (id >= 200 && id <= 202) return <WeatherIcon icon='ts' />;\r\n        if (id >= 230 && id <= 232) return <WeatherIcon icon='ts' />;\r\n\r\n        if (id >= 210 && id <= 221) return <WeatherIcon icon='ts_dry' />;\r\n\r\n        // Морось\r\n\r\n        if (id >= 300 && id <= 321) return <WeatherIcon icon='rain_light' />;\r\n\r\n        // Дождь\r\n\r\n        if (id === 500 || id === 520) return <WeatherIcon icon='rain_light' />;\r\n        if (id === 501 || id === 521 || id === 511) return <WeatherIcon icon='rain_med' />;\r\n        if ((id >= 502 && id <= 504) || (id >= 522 && id <= 531)) return <WeatherIcon icon='rain_hi' />;\r\n\r\n        // Снег, мокрый снег\r\n\r\n        if (id === 600 || id === 620) return <WeatherIcon icon='snow_light' />\r\n        if (id === 601 || id === 621) return <WeatherIcon icon='snow_med' />\r\n        if (id === 602 || id === 622) return <WeatherIcon icon='snow_hi' />\r\n        if (id >= 611 && id <= 616) return <WeatherIcon icon='sleet' />\r\n \r\n        // Туман, дымка\r\n\r\n        if (id >= 701 && id <= 781) return <WeatherIcon icon='fog' />;\r\n    }\r\n}\r\n\r\nexport function getConditionName(id) {\r\n    // Осадки\r\n\r\n    if (id >= 200 && id <= 202) return 'Дождь с грозой';\r\n    if (id >= 230 && id <= 232) return 'Дождь с грозой';\r\n    if (id >= 210 && id <= 221) return 'Гроза';\r\n\r\n    if(id >= 300 && id <= 321) return 'Морось';\r\n    if(id === 500 || id === 520) return 'Небольшой дождь';\r\n    if(id === 501 || id === 521) return 'Дождь';\r\n    if((id >= 502 && id <= 504) || (id >= 522 && id <= 531)) return 'Сильный дождь';\r\n    if(id === 511) return 'Замерзающий дождь';\r\n    if(id === 600 || id === 620) return 'Небольшой снег';\r\n    if(id === 601 || id === 621) return 'Снег';\r\n    if(id === 602 || id === 622) return 'Снегопад';\r\n    if(id >= 611 && id <= 616) return 'Дождь со снегом';\r\n\r\n    // Туман или дымка\r\n\r\n    if(id >= 701 && id <= 781) return 'Туман, дымка';\r\n\r\n    // Ясно, облака\r\n\r\n    if(id === 800) return \"Ясно\";\r\n    if(id === 801) return \"Малооблачно\";\r\n    if(id === 802) return \"Переменная облачность\";\r\n    if(id === 803) return \"Облачно\";\r\n    if(id === 804) return \"Пасмурно\";\r\n}\r\n\r\nexport function getWeatherBgGradient(id, isDay) {\r\n    if(isDay) {\r\n        if((id >= 200 && id <= 622) || id === 804) return <WeatherBgGradient bg='hcl_d' />;\r\n        if(id >= 701 && id <= 781) return <WeatherBgGradient bg='cl_d' />;\r\n        if(id === 800) return <WeatherBgGradient bg='clear_d' />;\r\n        if(id >= 801 && id <= 803) return <WeatherBgGradient bg='cl_d' />;\r\n    } else {\r\n        if((id >= 200 && id <= 622) || id === 804) return <WeatherBgGradient bg='hcl_n' />;\r\n        if(id >= 701 && id <= 781) return <WeatherBgGradient bg='cl_n' />;\r\n        if(id === 800) return <WeatherBgGradient bg='clear_n' />;\r\n        if(id >= 801 && id <= 803) return <WeatherBgGradient bg='cl_n' />;\r\n    }\r\n}\r\n\r\nexport function getWeatherBg(id) {\r\n    if (id === 800) return null;\r\n    if (id === 801) return <WeatherBackground bg='clouds_light' />;\r\n    if (id === 802) return <WeatherBackground bg='clouds_light' />;\r\n    if (id === 803) return <WeatherBackground bg='clouds_med' />;\r\n    if (id === 804) return <WeatherBackground bg='clouds_hi' />;\r\n\r\n    if (id >= 200 && id <= 202) return <WeatherBackground bg='rain_hi' />;\r\n    if (id >= 230 && id <= 232) return <WeatherBackground bg='rain_hi' />;\r\n    if (id >= 210 && id <= 221) return <WeatherBackground bg='rain_hi' />;\r\n\r\n    if(id >= 300 && id <= 321) return <WeatherBackground bg='rain_light' />;\r\n    if(id === 500 || id === 520) return <WeatherBackground bg='rain_light' />;\r\n    if(id === 501 || id === 521) return <WeatherBackground bg='rain_med' />;\r\n    if((id >= 502 && id <= 504) || (id >= 522 && id <= 531)) return <WeatherBackground bg='rain_hi' />;\r\n    if(id === 511) return <WeatherBackground bg='rain_med' />;\r\n    if(id === 600 || id === 620) return <WeatherBackground bg='snow_light' />;\r\n    if(id === 601 || id === 621) return <WeatherBackground bg='snow_med' />;\r\n    if(id === 602 || id === 622) return <WeatherBackground bg='snow_hi' />;\r\n    if(id >= 611 && id <= 616) return <WeatherBackground bg='sleet' />;\r\n\r\n    // Туман или дымка\r\n\r\n    if(id >= 701 && id <= 781) return <WeatherBackground bg='clouds_light' />;\r\n}","import React from 'react';\r\nimport { UiIcon } from '../Assets/IconsUI/icons';\r\n\r\nimport { isDay, getWeatherIcon, getConditionName, getWeatherBgGradient, getWeatherBg } from './Utils/Utils';\r\n\r\nexport function NowPageVisual(props) {\r\n    const currentTime = new Date(props.currentTime * 1000);\r\n    const sunsetTime = new Date(props.sunsetTime * 1000);\r\n    const sunriseTime = new Date(props.sunriseTime * 1000);\r\n\r\n    return (\r\n        <div className='now-page-visual'>\r\n            { getWeatherBgGradient(props.condition, isDay(currentTime, sunsetTime, sunriseTime)) }\r\n            { getWeatherBg(props.condition) }\r\n            \r\n            <div className='now-page-weather-data'>\r\n                <div className='wdata-temp'>\r\n                    { getWeatherIcon(props.condition, isDay(currentTime, sunsetTime, sunriseTime)) }\r\n                    { Math.floor(props.temp) }\r\n                    <span className='wdata-temp-units'>\r\n                        {'°' + props.unitType}\r\n                    </span>\r\n                </div>\r\n                <div className='wdata-condition'>\r\n                    <div className='wdata-condition-text'>\r\n                        { getConditionName(props.condition) }\r\n                    </div>\r\n                    <div className='wdata-condition-feelsLike'>\r\n                        { 'Ощущается как ' + Math.floor(props.feelsTemp) + '°' + props.unitType}\r\n                    </div>\r\n                </div>\r\n                <div className='wdata-facts'>\r\n                    <div className='fact'>\r\n                        <UiIcon icon='pressure' />\r\n                        { Math.floor(props.pressure * 0.75006375541921) + '  мм рт.ст.' }\r\n                    </div>\r\n                    <div className='fact'>\r\n                        <UiIcon icon='humidity' />\r\n                        { props.humidity + '%' }\r\n                    </div>\r\n                    <div className='fact'>\r\n                        <UiIcon icon='wind' />\r\n                        { props.wind + ' м/с' }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { requestNowForecast } from '../../Store/Actions/Actions';\r\nimport { AppHeader } from '../AppHeader';\r\nimport { NowPageVisual } from '../NowPageVisual';\r\n\r\nexport function NowPage(props){\r\n    // eslint-disable-next-line\r\n    useEffect(() => { props.requestNowForecast(); }, []);\r\n    const WeatherData = props.weatherNow.response;\r\n\r\n    switch(props.weatherNow.fetchStatus) {\r\n        case 'fetching':\r\n            return (\r\n                <div className='loader' />\r\n            );\r\n        case 'fetched':\r\n            return (\r\n                <div className='app-page now-page'>\r\n                    <AppHeader \r\n                        title='Погода сейчас'\r\n                        subtitle={WeatherData.name}\r\n                        refreshBtnCallback={() => props.requestNowForecast()}\r\n                    />\r\n                    <NowPageVisual \r\n                        condition={WeatherData.weather[0].id}\r\n                        temp={WeatherData.main.temp}\r\n                        feelsTemp={WeatherData.main.feels_like}\r\n\r\n                        pressure={WeatherData.main.pressure}\r\n                        humidity={WeatherData.main.humidity}\r\n                        wind={WeatherData.wind.speed}\r\n\r\n                        currentTime={WeatherData.dt}\r\n                        sunsetTime={WeatherData.sys.sunset}\r\n                        sunriseTime={WeatherData.sys.sunrise}\r\n\r\n                        unitType={props.unitType}\r\n                    />\r\n                </div>\r\n            );\r\n        default:\r\n            return (\r\n                <div className='app-page now-page'>\r\n                    <AppHeader \r\n                        title='Погода сейчас'\r\n                        subtitle='Данные не загружены'\r\n                        refreshBtnCallback={() => props.requestNowForecast()}\r\n                        separated\r\n                    />\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        weatherNow: state.weatherNow,\r\n        unitType: state.unitType\r\n    }), { requestNowForecast }\r\n)(NowPage);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { requestDailyForecast } from '../../Store/Actions/Actions';\r\nimport { AppHeader } from '../AppHeader';\r\nimport { getWeatherIcon, getDateFromUnix, getConditionName } from '../Utils/Utils';\r\n\r\nfunction ForecastPage(props) {\r\n    // eslint-disable-next-line\r\n    useEffect(() => { props.requestDailyForecast(); }, []);\r\n    const forecast = props.weatherForecast.response;\r\n\r\n    switch(props.weatherForecast.fetchStatus) {\r\n        case 'fetching':\r\n            return (\r\n                <div className='loader' />\r\n            );\r\n        case 'fetched':\r\n            const sortedForecast = Object.values(forecast.list.reduce((acc, n) => {\r\n                const date = new Date(n.dt * 1000).toDateString();\r\n                (acc[date] = acc[date] || []).push(n);\r\n                return acc;\r\n            }, {}));\r\n\r\n            return (\r\n                <div className='app-page forecast-page'>\r\n                    <AppHeader \r\n                        title='Прогноз на 10 дней'\r\n                        subtitle={props.weatherForecast.response.city.name}\r\n                        refreshBtnCallback={() => props.requestDailyForecast()}\r\n                        separated\r\n                    />\r\n                    <ForecastWrap \r\n                        data={sortedForecast}\r\n                        unitType={props.unitType}\r\n                    />\r\n                </div>\r\n            );\r\n        default:\r\n            return (\r\n                <div className='app-page forecast-page'>\r\n                    <AppHeader \r\n                        title='Прогноз на 10 дней'\r\n                        subtitle='Данные не загружены'\r\n                        refreshBtnCallback={() => props.requestDailyForecast()}\r\n                        separated\r\n                    />\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nfunction ForecastWrap(props) {\r\n    return (\r\n        props.data.map((i, index) => (\r\n            <div className='forecast-day' key={index}>\r\n                <div className='forecast-day-date'>\r\n                    { getDateFromUnix(i[0].dt).toLocaleDateString(\"ru\", {weekday: \"long\", day: \"numeric\", month: \"long\"}) }\r\n                </div>\r\n                <div className='forecast-item-container'>\r\n                    {\r\n                        i.map((item) => (\r\n                            <ForecastItem \r\n                                icon={ getWeatherIcon(item.weather[0].id, true) }\r\n                                hour={ getDateFromUnix(item.dt).toLocaleTimeString(\"ru\", {hour: \"numeric\", minute: \"2-digit\"}) }\r\n                                temp={ Math.floor(item.main.temp) + '°' + props.unitType }\r\n                                key={item.dt}\r\n                                conditionText={getConditionName(item.weather[0].id)}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div> \r\n            </div>\r\n        ))\r\n    );\r\n}\r\n\r\nfunction ForecastItem(props) {\r\n    return (\r\n        <div className='forecast-hour-item' title={props.conditionText}>\r\n            <div className='hour'>{props.hour}</div>\r\n            {props.icon}\r\n            <div className='temp'>{props.temp}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        weatherForecast: state.weatherForecast,\r\n        unitType: state.unitType\r\n    }), { requestDailyForecast }\r\n)(ForecastPage);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addCityRequest, removeCity, setUnitType, setDefaultCity, setApiKey } from '../../Store/Actions/Actions';\r\nimport { AppHeader } from '../AppHeader';\r\nimport classNames from 'classnames';\r\nimport { UiIcon } from '../../Assets/IconsUI/icons';\r\n\r\nimport { version } from '../../../package.json';\r\n\r\nfunction SettingsPage(props) {\r\n    const [cityInputVal, changeCityInputVal] = useState('');\r\n    const [apiKeyInputVal, changeApiKeyInputVal] = useState(props.apiKey);\r\n\r\n    return (\r\n        <div className='app-page settings-page'>\r\n            <AppHeader \r\n                title='Настройки'\r\n                separated\r\n            />\r\n            <div className='city-list'>\r\n                <h1 className='settings-header'>Список городов</h1>\r\n                {\r\n                    !props.cityList.length ?\r\n                    <p className='muted-text'>Добавьте хотя бы один город, чтобы смотреть погоду.</p>\r\n                    : props.cityList.map((i) => (\r\n                        <CityListItem \r\n                            cityName={i.cityName}\r\n                            cityCountry={i.cityCountry}\r\n                            cityId={i.cityId}\r\n                            key={i.cityId}\r\n                            isDefault={i.default}\r\n                            onDelete={() => props.removeCity(i.cityId)}\r\n                            onSetDefault={() => !i.default && props.setDefaultCity(i.cityId)}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            \r\n            <div className='settings-section'>\r\n                <div className='left-section'>\r\n                    <h1 className='settings-header'>Добавить город</h1>\r\n                </div>\r\n                <div className='right-section'>\r\n                    <input \r\n                        className={classNames('ui-input', props.cityListError && 'ui-input-error')}\r\n                        type='text'\r\n                        value={cityInputVal}\r\n                        onChange={(e) => changeCityInputVal(e.target.value)}\r\n                        placeholder={props.cityListError ? props.cityListError : 'Найти город...'}\r\n                    />\r\n                    <button className='ui-button button-blue' onClick={() => {props.addCityRequest(cityInputVal); changeCityInputVal('')}}>Добавить</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='settings-section'>\r\n                <div className='left-section'>\r\n                    <h1 className='settings-header'>Единица измерения</h1>\r\n                </div>\r\n                <div className='right-section unit-switcher'>\r\n                    <button className={props.unitType === 'C' ? 'active' : ''} onClick={() => props.setUnitType('C')}>°C</button>\r\n                    <button className={props.unitType === 'F' ? 'active' : ''} onClick={() => props.setUnitType('F')}>°F</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='settings-section'>\r\n                <div className='left-section'>\r\n                    <h1 className='settings-header'>Ключ API</h1>\r\n                    <p className='muted-text'>\r\n                        API: openweathermap.org<br />\r\n                    Не меняйте это поле и оставьте ключ стандартным, если не знаете, что делаете!\r\n                    </p>\r\n                </div>\r\n                <div className='right-section'>\r\n                    <input className='ui-input' type='text' value={apiKeyInputVal} onChange={(e) => changeApiKeyInputVal(e.target.value)} />\r\n                    <button className='ui-button button-blue' onClick={() => props.setApiKey(apiKeyInputVal)}>OK</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='settings-section'>\r\n                <div className='left-section'>\r\n                    <h1 className='settings-header'>Удалить данные</h1>\r\n                    <p className='muted-text'>\r\n                        Возникла странная ошибка? Очистите данные этого веб-приложения. Настройки будут удалены!\r\n                    </p>\r\n                </div>\r\n                <div className='right-section'>\r\n                    <button className='ui-button button-red' onClick={() => {\r\n                        localStorage.clear();\r\n                        document.location.reload();\r\n                    }}>Сбросить настройки</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className='settings-section'>\r\n                <div className='left-section'>\r\n                    <h1 className='settings-header'>О приложении</h1>\r\n                </div>\r\n                <div className='right-section'>\r\n                    <p className='muted-text'>Версия: { version }</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CityListItem(props) {\r\n    return (\r\n        <div className='city-list-item'>\r\n            <button className='icon-button' onClick={props.onSetDefault} title='Использовать этот город'>\r\n                {\r\n                    props.isDefault ? <UiIcon icon='check-checked' /> : <UiIcon icon='check-blank' />\r\n                }\r\n            </button>\r\n            <div className='city-list-item-text'>\r\n                <h1 className='settings-header'>{props.cityName}</h1>\r\n                <p className='muted-text'>{props.cityCountry}</p> \r\n            </div>\r\n            <button className='icon-button' onClick={props.onDelete} title='Удалить город'><UiIcon icon='remove' /></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        cityList: state.cityList,\r\n        unitType: state.unitType,\r\n        apiKey: state.apiKey,\r\n        cityListError: state.cityListError,\r\n    }), { addCityRequest, removeCity, setUnitType, setDefaultCity, setApiKey }\r\n)(SettingsPage);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { switchRoute, requestNowForecast, requestDailyForecast } from '../../Store/Actions/Actions';\r\nimport { UiIcon } from '../../Assets/IconsUI/icons';\r\n\r\nfunction Navigation(props) {\r\n    return (\r\n        <div className='bottom-navigation blur-card'>\r\n            <NavigationButton icon={<UiIcon icon='home'/>} active={props.currentRoute === 'Now' ? true : false} value=\"Сейчас\" onclick={() => {\r\n                if (props.currentRoute !== 'Now') {\r\n                    props.switchRoute('Now');\r\n                    props.requestNowForecast();\r\n                }\r\n            }}/>\r\n            <NavigationButton icon={<UiIcon icon='forecast'/>} active={props.currentRoute === 'Forecast' ? true : false} value=\"Прогноз\" onclick={() => {\r\n                if (props.currentRoute !== 'Forecast') {\r\n                    props.switchRoute('Forecast');\r\n                    props.requestDailyForecast();\r\n                }\r\n            }}/>\r\n            <NavigationButton icon={<UiIcon icon='settings'/>} active={props.currentRoute === 'Settings' ? true : false} value=\"Настройки\" onclick={() => props.switchRoute('Settings')}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NavigationButton(props){\r\n    return(\r\n        <button className={ classNames('nav-btn', props.active ? 'nav-btn-active': '') } onClick={props.onclick}>\r\n            {props.icon}\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        currentRoute: state.currentRoute\r\n    }),\r\n    { switchRoute, requestNowForecast, requestDailyForecast }\r\n)(Navigation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport { dismissModal } from '../Store/Actions/Actions';\r\n\r\nfunction ModalController(props) {\r\n    if (props.modal) {\r\n        return (\r\n            <div className='modal-container'>\r\n                <div className='modal-wrapper blur-card'>\r\n                    <div className={classNames('modal-header', 'modal-type-' + props.modal.modalType)}>\r\n                        {props.modal.modalTitle}\r\n                    </div>\r\n                    <div className='modal-body'>\r\n                        {props.modal.modalBody}\r\n                    </div>\r\n                    <button className='modal-btn ui-button button-blue' onClick={() => props.dismissModal()}>OK</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        modal: state.modal\r\n    }), { dismissModal }\r\n)(ModalController);","import * as types from '../Actions/Types';\r\n\r\nexport function switchRoutes(state, action) {\r\n    switch(action.type) {\r\n        case types.SWITCH_ROUTES: return action.value;\r\n        \r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport function fetchNowForecastReducer(state, action) {\r\n    switch(action.type) {\r\n        case types.FETCH_NOW_FORECAST_STARTED:\r\n            return {\r\n                fetchStatus: 'fetching',\r\n                response: {},\r\n                error: undefined,\r\n            }\r\n        case types.FETCH_NOW_FORECAST_SUCCESS:\r\n            return {\r\n                fetchStatus: 'fetched',\r\n                response: action.response,\r\n                error: undefined,\r\n            }\r\n        case types.FETCH_NOW_FORECAST_FAILED:\r\n            return {\r\n                fetchStatus: 'failed',\r\n                response: {},\r\n                error: action.error,\r\n             }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function fetchDailyForecastReducer(state, action) {\r\n    switch(action.type) {\r\n        case types.FETCH_DAILY_FORECAST_STARTED:\r\n            return {\r\n                fetchStatus: 'fetching',\r\n                response: {},\r\n                error: undefined,\r\n            }\r\n        case types.FETCH_DAILY_FORECAST_SUCCESS:\r\n            return {\r\n                fetchStatus: 'fetched',\r\n                response: action.response,\r\n                error: undefined,\r\n            }\r\n        case types.FETCH_DAILY_FORECAST_FAILED:\r\n            return {\r\n                fetchStatus: 'failed',\r\n                error: action.error,\r\n                response: undefined,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function cityListReducer(state, action) {\r\n    switch(action.type) {\r\n        case types.ADD_CITY_CHECK_SUCCESS:\r\n            if(!state.filter(i => i.cityId === action.response.id).length) {\r\n                return state.concat({\r\n                    cityName: action.response.name,\r\n                    cityCountry: action.response.sys.country,\r\n                    cityId: action.response.id,\r\n                    default: !state.length ? true : false,\r\n                }) \r\n            }\r\n        // eslint-disable-next-line\r\n        case types.REMOVE_CITY:\r\n            const newState = state.filter((item) => {\r\n                return item.cityId !== action.value;\r\n            });\r\n            if(!newState.filter(item => item.default).length && newState.length) {\r\n                newState[0].default = true;\r\n                return newState;\r\n            } else {\r\n                return newState;\r\n            }\r\n        case types.SET_DEFAULT_CITY:\r\n            return state.map(i => {\r\n                if(i.cityId === action.value && !i.default) {\r\n                    return {\r\n                        ...i,\r\n                        default: true,\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...i,\r\n                    default: false,\r\n                };\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function unitReducer(state, action) {\r\n    switch(action.type) {\r\n        case types.SET_UNIT:\r\n            return action.value;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function apiKeyReducer(state, action) {\r\n    switch(action.type) {\r\n        case types.SET_API_KEY:\r\n            return action.value;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function modalReducer(state, action) {\r\n    switch(action.type) {\r\n        case types.GENERATE_MODAL:\r\n            return {\r\n                modalType: action.value.modalType,\r\n                modalTitle: action.value.modalTitle,\r\n                modalBody: action.value.modalBody,\r\n            }\r\n        case types.DISMISS_MODAL:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function appReducer(state, action) {\r\n    return {\r\n        currentRoute: switchRoutes(state.currentRoute, action),\r\n        cityList: cityListReducer(state.cityList, action),\r\n        weatherNow: fetchNowForecastReducer(state.weatherNow, action),\r\n        weatherForecast: fetchDailyForecastReducer(state.weatherForecast, action),\r\n        unitType: unitReducer(state.unitType, action),\r\n        apiKey: apiKeyReducer(state.apiKey, action),\r\n        modal: modalReducer(state.modal, action),\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { appReducer } from './Reducers/Reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {\r\n    currentRoute: 'Now',\r\n    cityList: JSON.parse(localStorage.getItem('cityList')) || [],\r\n    weatherNow: {\r\n        fetchStatus: undefined,\r\n        response: {},\r\n    },\r\n    weatherForecast: {\r\n        fetchStatus: undefined,\r\n        response: {},\r\n    },\r\n    unitType: localStorage.getItem('unitType') || 'C',\r\n    apiKey: localStorage.getItem('apiKey') || 'b2e7926c2fe12f7560476f3d91cc9adf',\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(appReducer, initialState, composeEnhancers(applyMiddleware(thunk)));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\n\r\nimport NowPage from './Components/NowPage';\r\nimport ForecastPage from './Components/ForecastPage';\r\nimport SettingsPage from './Components/SettingsPage';\r\nimport Navigation from './Components/Navigation';\r\nimport ModalController from './Components/Modal';\r\n\r\nimport { store } from './Store/store';\r\n\r\nfunction App(props) {\r\n    switch(props.currentRoute) {\r\n        case 'Now':\r\n            return <>\r\n                <ModalController />\r\n                <NowPage />\r\n                <Navigation />\r\n            </>;\r\n        case 'Forecast':\r\n            return <>\r\n                <ModalController />\r\n                <ForecastPage />\r\n                <Navigation />\r\n            </>;\r\n        case 'Settings':\r\n            return <>\r\n                <ModalController />\r\n                <SettingsPage />\r\n                <Navigation />\r\n            </>;\r\n        \r\n        default:\r\n            return <>\r\n                <ModalController />\r\n                <NowPage />\r\n                <Navigation />\r\n            </>;\r\n    }\r\n}\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('cityList', JSON.stringify(store.getState().cityList));\r\n    localStorage.setItem('unitType', store.getState().unitType);\r\n    localStorage.setItem('apiKey', store.getState().apiKey);\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n    currentRoute: state.currentRoute,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport { store } from './Store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();"],"sourceRoot":""}